{"version":3,"file":"static/js/779.fe669d2c.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,sIC7BVO,EAAOC,EAAAA,EAAAA,GAAH,4FAMJC,EAAWD,EAAAA,EAAAA,GAAH,yF,SCiBrB,EApBgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAWO,GAASG,MAAK,SAAAhB,GAAI,OAAIY,EAAWZ,EAAKiB,QAApB,GAC9B,GAAE,CAACJ,KAGF,SAACN,EAAD,UACGI,EAAQO,OAAS,EACdP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OACV,UAACK,EAAD,YACE,wBAAKW,KACL,uBAAIC,MAFSjB,EADL,IAMZ,yCAGT,C","sources":["Api/API.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '8962ff034697639f97b613a55ba4ec7e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 30px;\n  padding-right: 30px;\n`;\n\nexport const ListItem = styled.li`\n  font-style: none;\n  font-family: Roboto;\n  font-size: 18px;\n`;\n\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getReviews } from 'Api/API';\nimport { List, ListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <List>\n      {reviews.length > 0\n        ? reviews.map(({ author, content, id }) => (\n            <ListItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </ListItem>\n          ))\n        : \"Sorry, we don't have any information.\"}\n    </List>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","axios","getTrending","response","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","List","styled","ListItem","useState","reviews","setReviews","movieId","useParams","useEffect","then","results","length","map","author","content"],"sourceRoot":""}