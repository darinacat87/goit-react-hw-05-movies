{"version":3,"file":"static/js/387.c701e563.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,0IC7BVO,EAAWC,EAAAA,EAAAA,GAAH,6CAGRC,EAAWD,EAAAA,EAAAA,GAAH,qEAKRE,EAAWF,EAAAA,EAAAA,GAAH,0CAGRG,EAAgBH,EAAAA,EAAAA,EAAH,sC,SCuB1B,EA/Ba,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAgBU,GAASG,MAAK,SAAAlB,GAAI,OAAIc,EAAYd,EAAKmB,KAArB,GACnC,GAAE,CAACJ,KAEF,SAACR,EAAD,UACGM,EAASO,OAAS,EACfP,EAASQ,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,UAACf,EAAD,YACE,gBACEgB,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAACnB,EAAD,UAAWY,KACX,UAACX,EAAD,0BAA4Ba,OAbfpB,EADJ,IAiBb,yCAGT,C","sources":["Api/API.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '8962ff034697639f97b613a55ba4ec7e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\nexport const CastItem = styled.li`\n  margin: 10px 0 14px;\n  padding: 2px 7px;\n`;\n\nexport const TextName = styled.h3`\n  margin: 7px 0;\n`;\nexport const TextCharacter = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'Api/API';\nimport { CastList, CastItem, TextName, TextCharacter } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieCredits(movieId).then(data => setCastList(data.cast));\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `http://blog.aspneter.com/Images/no-thumb.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={100}\n                height={160}\n              />\n              <TextName>{name}</TextName>\n              <TextCharacter> Character: {character}</TextCharacter>\n            </CastItem>\n          ))\n        : \"Sorry, we don't have any information.\"}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","getTrending","response","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","CastList","styled","CastItem","TextName","TextCharacter","useState","castList","setCastList","movieId","useParams","useEffect","then","cast","length","map","name","profile_path","character","src","alt","loading","width","height"],"sourceRoot":""}