{"version":3,"file":"static/js/765.600b9bab.chunk.js","mappings":"mTACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,yICzBVO,EAAO,WAClB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbhB,EAAAA,EAAAA,MAAckB,MAAK,SAAAhB,GACjBU,EAAeV,EAAKiB,SACpBH,GAAa,EACd,GACF,GAAE,KAGD,6BACE,SAAC,KAAD,8BACA,UAAC,KAAD,WACGL,EAAYS,KAAI,SAAAC,GAAK,OACpB,yBACE,SAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAMf,IAAMiB,MAAO,CAAEC,KAAMX,GAArD,SACGQ,EAAMI,gBAAkBJ,EAAMK,QAF1BL,EAAMf,GADK,IAOrBS,IAAa,SAAC,IAAD,SAIrB,EACD,W,+IChCaY,EAAQC,EAAAA,EAAAA,GAAH,kEAKLC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8OAeTG,EAAYH,EAAAA,EAAAA,GAAH,6H","sources":["Api/API.js","Pages/Home/Home.jsx","Pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '8962ff034697639f97b613a55ba4ec7e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Title, MovieLink, MovieList } from './Home.styled';\nimport { getTrending } from 'Api/API';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrending().then(data => {\n      setTrendMovies(data.results);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending Today</Title>\n      <MovieList>\n        {trendMovies.map(movie => (\n          <li key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title || movie.name}\n            </MovieLink>\n          </li>\n        ))}\n        {isLoading && <Loader />}\n      </MovieList>\n    </main>\n  );\n};\nexport default Home;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: 500;\n  color: black\n  &:hover,\n  &:focus {\n    color: lightgreen\n    }\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  margin-left: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n"],"names":["API_KEY","axios","getTrending","response","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Home","useState","trendMovies","setTrendMovies","location","useLocation","isLoading","setIsLoading","useEffect","then","results","map","movie","to","state","from","original_title","name","Title","styled","MovieLink","Link","MovieList"],"sourceRoot":""}