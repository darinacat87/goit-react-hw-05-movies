{"version":3,"file":"static/js/98.24861018.chunk.js","mappings":"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","sources":["Api/API.js","Pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/SearchForm/SearchInput.jsx","components/SearchForm/SearchFormBar.jsx","Pages/NotFound/NotFound.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '8962ff034697639f97b613a55ba4ec7e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: 500;\n  color: black\n  &:hover,\n  &:focus {\n    color: lightgreen\n    }\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  margin-left: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchBox = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: lightblue;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font-size: 16px;\n  }\n`;\n\nexport const BtnIcon = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 58px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { Input } from './SearchForm.styled';\n\nconst SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Titanic\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;\n","\nimport SearchForm from \"./SearchForm\";\nimport SearchInput from \"./SearchInput\";\nimport { BtnIcon, SearchBox } from \"./SearchForm.styled\";\nimport { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\n\n\nexport const SearchFormBar = ({ onSubmit }) => (\n  <SearchBox>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <BtnIcon type=\"submit\">\n        <FcSearch />\n      </BtnIcon>\n    </SearchForm>\n  </SearchBox>\n);\nSearchFormBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","const NotFound = () => {\n  return (\n    <main style={{ textAlign: 'center' }}>\n      <b style={{ fontSize: 74 }}>404</b>\n      <p>Sorry, we couldn't find that page :(</p>\n    </main>\n  );\n};\n\nexport default NotFound;\n","\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { MovieList, MovieLink } from 'Pages/Home/Home.styled';\nimport { getSearchMovies } from 'Api/API';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchFormBar } from 'components/SearchForm/SearchFormBar';\nimport NotFound from 'Pages/NotFound/NotFound';\n\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    getSearchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log('Not found');\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n  return (\n    <main>\n      <SearchFormBar onSubmit={handleSubmit} />\n      {error && <NotFound>Not found</NotFound>}\n      <MovieList>\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </MovieLink>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </MovieList>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","getTrending","response","data","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Title","styled","MovieLink","Link","MovieList","SearchBox","Form","Input","BtnIcon","onSubmit","children","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchFormBar","style","textAlign","fontSize","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useState","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","then","results","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","to","state","from","original_title","Loader"],"sourceRoot":""}